
buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.3'


    }
}

apply plugin: 'com.android.application'

repositories {
    google()
    mavenCentral()
}

dependencies {


        implementation "com.android.support:support-v4:28.0.0"
        implementation "com.android.support:support-v13:28.0.0"
        implementation "com.android.support:cardview-v7:28.0.0"
        implementation "com.android.support:appcompat-v7:28.0.0"

//        def room_version = "2.4.2"
//
//        implementation "androidx.room:room-runtime:$room_version"
//        annotationProcessor "androidx.room:room-compiler:$room_version"
//
//        // optional - RxJava2 support for Room
//        implementation "androidx.room:room-rxjava2:$room_version"
//
//        // optional - RxJava3 support for Room
//        implementation "androidx.room:room-rxjava3:$room_version"
//
//        // optional - Guava support for Room, including Optional and ListenableFuture
//        implementation "androidx.room:room-guava:$room_version"
//
//        // optional - Test helpers
//        testImplementation "androidx.room:room-testing:$room_version"
//
//        // optional - Paging 3 Integration
//        implementation "androidx.room:room-paging:2.5.0-alpha01"




}

// The sample build uses multiple directories to
// keep boilerplate and common code separate from
// the main sample code.
List<String> dirs = [
    'main',     // main sample code; look here for the interesting stuff.
    'common',   // components that are reused by multiple samples
    'template'] // boilerplate code that is generated by the sample template process

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 28
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            dirs.each { dir ->
                java.srcDirs "src/${dir}/java"
                res.srcDirs "src/${dir}/res"
            }
        }
        androidTest.setRoot('tests')
        androidTest.java.srcDirs = ['tests/src']

    }

}
